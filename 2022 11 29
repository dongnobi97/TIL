금일은 팀 프로젝트 발표날이었습니다.
저희조가 마지막으로 발표하여서 다른조들이 우리와는 어떤 방법으로 하였는지 살펴보고 알아볼 수 있는 좋은 기회였습니다.

자세하게 코드를 뜯어보진 못하였지만, 우리조에서 구현하지 못한 송금기능, 수수료, 연 이자 등의 추가적인 기능들을 구현한 조들이 있어서
얼른 자바를 더 익숙해져서 따라하고 싶다는 마음이 들었습니다.


1.kpt작성

kpt를 작성하면서 우리조에서 어려웠던 코드와 해당 이유에 대하여 발표하였는데요.


# 첫 번째로는 계좌번호의 정규표현식과 마스킹하는 기능이었는데요.

 private static final String LAST_10_CHAR_PATTERN = "(.{10}$)";

    @Override
    public String toString() {
        return "이름: " +name + "|" + "은행명: " + bankName + "|"+ "계좌번호: " +  accountNum.replaceAll(LAST_10_CHAR_PATTERN, "**********") +"|"+ "잔고: " + balance;
    }


“(.{10}$)“ 해당 코드는 10자리까지 마스킹을 한다는 표현식입니다  부분은 보통 계좌가 10~14자리인 점을 참고하여 해당부분을 사용하였고,
팀원들끼리 같이 찾으면서 정보를 공유하여 해결하였습니다.

#두 번째로는 계좌번호와 이름을 통해 조회하는 기능이었습니다.

else {
                if (i < bankUsers.size() - 1) {
                    continue;
                } else {
                    System.out.println("계좌 번호를 확인하세요.");
                }
 
for문 내부 에러를 처리하기 위한 else 문이 반복 출력되는 오류가 있었다.
   마지막 요소를 조회하기 전까지 continue를 이용해 오류 메시지 출력을 막았고
   마지막 요소까지 모두 조회한 후 오류 메시지가 출력되도록 구현하였습니다.

#세 번째로는 거래내역 출력부분입니다.

 @Override
    public String toString() {

        if(super.getIsDeposit()){  // getIsDeposit() 입금 여부 판별
            return "이름: " + super.getName() + "|" + "은행명: " + super.getBankName() + "|"+ "계좌번호: " + super.getAccountNum().replaceAll(LAST_10_CHAR_PATTERN, "**********")+"|" +
                    "입금액: " + super.getMoney() + "|" + "잔고: " + super.getBalance()+ "| " + super.getTransactionDate();
        } else if (super.getIsWithdrawal()) {  // getIsWithrawal() 출금 여부 판별
            return "이름: " + super.getName() + "|" + "은행명: " + super.getBankName() + "|"+ "계좌번호: " + super.getAccountNum().replaceAll(LAST_10_CHAR_PATTERN, "**********")+"|" +
                    "출금액: " + super.getMoney() + "|" + "잔고: " + super.getBalance()+ "| " + super.getTransactionDate();
        }
        else{
            return null;
        }

 입금과 출금 여부에 따라 다른 내용을 출력해줘야 해서 어려웠는데,
  입출금여부를 판별하는 변수를 이용해 이를 해결하였습니다.
