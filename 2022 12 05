오늘부터는 스프링에 대해서 공부하였습니다.

1. IP 주소란?
>> 거대한 네트워크망에서 여러분의 컴퓨터를 식별하기 위한 위치 주소

2. 브라우저란?
>> 크롬, 사파리, 엣지와 같이
웹페이지, 이미지, 비디오등의 컨텐츠를 송/수신하고 표현해주는 소프트웨어

3. DNS(Domain Name Server)란?
>> abcdefg.com과 같은 도메인 이름 을 입력해서 원하는 웹 사이트로 이동. 메인 이름을 중개해주는 전화번호부와 같은 서버

4. HTTP란 ?
>> 멀리 떨어져서 서로에 대한 정보가 없는 메세지의 송/수신자가 서로 필요한 요청과 응답을 할 수 있도록 미리 규약을 정해놓은 것을 “프로토콜”이라고 하고, 
웹 상에서는 HTTP 라는 프로토콜을 통해서 데이터를 송/수신 함

5. RESTful API란?
>> Representational State Transfer(REST)는 API 작동 방식에 대한 조건을 부과하는 소프트웨어 아키텍처

#토글 단축키
모든 토글을 열고 닫는 단축키
Windows : Ctrl + alt + t 
Mac : ⌘ + ⌥ + t 

6. 레이어드 아키텍처 패턴

6-1 Presentation 계층

사용자와 상호 작용 처리 계층

CLI, HTTP 요청, HTML 처리 등을 담당한다.

HTTP 요청 처리 및 HTML 렌더링에 대해 알고 있는 웹 계층

흔히 말하는 MVC (Model / View / Controller) 도 이 계층에 속함

6-2  Domain(Business or Service) 계층

서비스/시스템의 핵심 로직

유효성 검사 및 계산을 포함하는 Business 논리 계층

애플리케이션이 수행해야하는 **도메인**과 관련된 작업들을 담당한다.

입력/저장된 데이터를 기반으로 계산

Presentation 계층에서 받은 데이터의 유효성 (Validation) 검사

어떤 Data Access 를 선택할지 결정

6-3  Data Access(Persistence) 계층

DAO 계층

Database / Message Queue / 외부 API와의 통신 등 처리

데이터베이스 또는 원격 서비스에서 영구 데이터를 관리하는 방법을 분류하는 데이터 접근 계층


7. Outro 2. 스프링/스프링부트를 사용하는 이유
>> 단순 반복작업부분이 많았던 Controller와 Repository쪽을 개발 관점에서 매우 쉽고 편하게 처리해줘  
가장 중요한 핵심 비즈니스 로직인 Service 레이어에 더 집중 할 수 있도록 하게 해준다
