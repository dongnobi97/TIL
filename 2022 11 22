금일은 익일 있을 팀 프로젝트를 위해 자바를 다시 복습하였습니다.

1.클래스란?

-클래스는 표현하고자 하는 대상의 공통 속성을 한 군데에 정의해 놓은 것 클래스는 객체의 속성을 정의해 놓은 것
- 또한 클래스 내부의 정보를 멤버 변수라라고 합니다

2. 인스턴스란(Instance)?

-어떠한 클래스로부터 만들어진 객체를 그 클래스의 인스턴스라고 함
-인스턴스의 멤버변수에 접근할 때는 [생성된 인스턴스.멤버변수] 의 형식을 사용하면 됨

3.메소드(method)
>> 메소드는 어떠한 작업을 수행하는 코드를 하나로 묶어 놓은 것

*메소드가 필요한 이유

(1). 재사용성 :  메소드를 만들어 놓으면 이후 반복적으로 재사용이 가능

(2). 중복된 코드 제거 : 프로그램을 작성하다보면 같은 코드가 여러번 반복되어 작성되곤 하는데, 
이럴 때, 메소드를 활용하면 중복된 부분을 없애므로 보다 효율적인 코드가 됨

(3). 프로그램 구조화 : 

int[] heights = new int[5]; // 키가 들어가 있는 배열

initHeight(heights); // 1. 키에 대한 초기화
sortHeight(heights); // 2. 키를 오름차순으로 정렬
printHeight(heights); // 3. 정렬된 키를 출력

*메소드를 만들 때는 메소드 안에서 동작하는 내용을 잘 표현할 수 있도록 이름을 잘 지어주면, 메소드 안을 들여다 보지 않고도 
한눈에 코드를 읽어내려갈 수 있음 , 이것을 readability가 좋다고 표현, 이 readability의 기본 품질을 위해서 Java로 메소드를 만들 때 지켜줘야 하는 
기본 약속은 다음 두 가지가 있습니다.

(1) 동사로 시작해야함
(2)  camel case로 작성해야한다. (첫 단어는 소문자로, 이후 단어의 구분에 따라서 첫 글자만 대문자인 단어가 이어집니다. 중간에 띄어쓰기나 특수문자는 들어가지 않음)

4. 생성자(constructor)
 생성자는 인스턴스가 생성될 때 사용되는 '인스턴스 초기화 메소드'
 
 #생성자의 형식
 
 클래스이름 (타입 변수명, 타입 변수명, ...){
    인스턴스 생성 될 때에 수행하여할 코드
    변수의 초기화 코드
}

5. 상속 (inheritance)

>>상속이란 기존의 클래스를 재사용하는 방식 중의 하나, 한 번 작성한 코드가 재사용이 필요하다면, 변경사항만 코드로 작성하므로
상대적으로 적은 양의 코드를 작성할 수 있게 됨  이렇게 코드를 재사용하면, 코드와 클래스가 많아질수록 관리가 용이하다는 장점이 있음

#상속의 특징
(1). 부모 클래스로에서 정의된 필드와 메소드를 물려 받음
(2). 새로운 필드와 메소드를 추가할 수 있음
(3). 부모 클래스스에서 물려받은 메소드를 수정할 수 있음

